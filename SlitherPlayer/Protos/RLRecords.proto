syntax = "proto3";

option csharp_namespace = "Slither.Proto";

// Space movements available by the SlitherPlayer
enum Moves {
    Left = 0;
    Right = 1;
    Boost = 2;
    BoostLeft = 3;
    BoostRight = 4;
    Wait = 5;
}

// Request from SlitherPlayer to the SlitherTrainer
// on which move to do
message MoveRequest {
    // Current state of the game as reported
    // by an InceptionV3 featurized image (2048,)
    repeated float Image = 1;
}

message MoveResponse {
    // Move reported from SlitherTrainer
    Moves Action = 1;
}

// A way to communicate the current states and rewards
// for training
message RememberRequest {
    repeated float CurrentImage = 1;
    repeated float NextImage = 2;
    Moves Action = 3;
    float Reward = 4;
    bool Died = 5;
}

// Communicates to take a step to the Trainer
message StepRequest {
    int32 TotalStep = 1;
}

// If the Player died, this message is sent to end the run
// and restart
message ResetRequest {
    float Score = 1;
    int32 Step = 2;
    int32 Run = 3;
}

// Fill in message for a void rpc response
message Nothing {}

// Service that takes in the environment state from the SlitherPlayer
// And responds
service SlitherTrainer {
    // Based on the request, NextMove responds with the proper move response
    // integer that maps to an Enum
    rpc NextMove(MoveRequest) returns (MoveResponse);

    rpc Remember(RememberRequest) returns (Nothing);

    rpc StepUpdate(StepRequest) returns (Nothing);

    rpc Reset(ResetRequest) returns (Nothing);
}